{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "rshtml",
  "rules": {
    "source_file": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "ï»¿"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "extends_directive"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "REPEAT",
              "content": {
                "type": "SYMBOL",
                "name": "_template"
              }
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "rust_identifier": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "[a-zA-Z_][a-zA-Z0-9_]*"
      }
    },
    "string_line": {
      "type": "TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "PATTERN",
            "value": "\"(\\\\.|[^\"\\\\])*\""
          },
          {
            "type": "PATTERN",
            "value": "'(\\\\.|[^'\\\\])*'"
          }
        ]
      }
    },
    "start_symbol": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "@"
      }
    },
    "open_brace": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "{"
      }
    },
    "close_brace": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "}"
      }
    },
    "open_paren": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "("
      }
    },
    "close_paren": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": ")"
      }
    },
    "open_comment": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "@*"
      }
    },
    "close_comment": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "*@"
      }
    },
    "text": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "(@@|@@}|@@\\{|[^@])+"
      }
    },
    "inner_text": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "(@@|@@}|@@\\{|[^@}])+"
      }
    },
    "if_": {
      "type": "TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "if"
          },
          {
            "type": "PATTERN",
            "value": "[^@{]*"
          }
        ]
      }
    },
    "else_if_": {
      "type": "TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "else if"
          },
          {
            "type": "PATTERN",
            "value": "[^@{]*"
          }
        ]
      }
    },
    "else_": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "else"
      }
    },
    "while_": {
      "type": "TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "while"
          },
          {
            "type": "PATTERN",
            "value": "[^@{]*"
          }
        ]
      }
    },
    "for_": {
      "type": "TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "for"
          },
          {
            "type": "PATTERN",
            "value": "[^@{]*"
          }
        ]
      }
    },
    "match_": {
      "type": "TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "match"
          },
          {
            "type": "PATTERN",
            "value": "[^@{]*"
          }
        ]
      }
    },
    "extends_": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "extends"
      }
    },
    "component_tag_identifier": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "[A-Z][a-zA-Z0-9]*(\\.[A-Z][a-zA-Z0-9]*)*"
      }
    },
    "_template": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PREC",
          "value": 1,
          "content": {
            "type": "SYMBOL",
            "name": "comment_block"
          }
        },
        {
          "type": "PREC",
          "value": 1,
          "content": {
            "type": "SYMBOL",
            "name": "_block"
          }
        },
        {
          "type": "PREC",
          "value": 0,
          "content": {
            "type": "SYMBOL",
            "name": "text"
          }
        }
      ]
    },
    "_inner_template": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PREC",
          "value": 1,
          "content": {
            "type": "SYMBOL",
            "name": "comment_block"
          }
        },
        {
          "type": "PREC",
          "value": 1,
          "content": {
            "type": "SYMBOL",
            "name": "_block"
          }
        },
        {
          "type": "PREC",
          "value": 0,
          "content": {
            "type": "SYMBOL",
            "name": "inner_text"
          }
        }
      ]
    },
    "extends_directive": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "start_symbol"
        },
        {
          "type": "SYMBOL",
          "name": "extends_"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "open_paren"
                },
                {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "FIELD",
                      "name": "path",
                      "content": {
                        "type": "SYMBOL",
                        "name": "string_line"
                      }
                    },
                    {
                      "type": "BLANK"
                    }
                  ]
                },
                {
                  "type": "SYMBOL",
                  "name": "close_paren"
                }
              ]
            },
            {
              "type": "PATTERN",
              "value": "\\s"
            }
          ]
        }
      ]
    },
    "_block": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "start_symbol"
        },
        {
          "type": "SYMBOL",
          "name": "rust_stmt"
        }
      ]
    },
    "comment_block": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "open_comment"
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "PATTERN",
            "value": "([^*]|\\*+[^@])*"
          }
        },
        {
          "type": "SYMBOL",
          "name": "close_comment"
        }
      ]
    },
    "rust_stmt": {
      "type": "REPEAT1",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "FIELD",
            "name": "head",
            "content": {
              "type": "ALIAS",
              "content": {
                "type": "SYMBOL",
                "name": "rust_stmt_head"
              },
              "named": true,
              "value": "source_file"
            }
          },
          {
            "type": "SYMBOL",
            "name": "open_brace"
          },
          {
            "type": "FIELD",
            "name": "body",
            "content": {
              "type": "CHOICE",
              "members": [
                {
                  "type": "REPEAT1",
                  "content": {
                    "type": "SYMBOL",
                    "name": "_inner_template"
                  }
                },
                {
                  "type": "BLANK"
                }
              ]
            }
          },
          {
            "type": "SYMBOL",
            "name": "close_brace"
          }
        ]
      }
    },
    "rust_stmt_head": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "if_"
        },
        {
          "type": "SYMBOL",
          "name": "else_if_"
        },
        {
          "type": "SYMBOL",
          "name": "else_"
        },
        {
          "type": "SYMBOL",
          "name": "while_"
        },
        {
          "type": "SYMBOL",
          "name": "for_"
        },
        {
          "type": "SYMBOL",
          "name": "match_"
        }
      ]
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s+"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": [],
  "reserved": {}
}